package ${package.Entity};

#foreach($pkg in ${table.importPackages})
    #if("${pkg}" != "com.baomidou.mybatisplus.annotation.TableName"
    && "${pkg}" != "com.baomidou.mybatisplus.annotation.TableField"
    && "${pkg}" != "com.baomidou.mybatisplus.annotation.TableId")
import ${pkg};
    #end
#end
#foreach($field in ${table.fields})
    #if(${field.propertyType.equals("Date")})
import org.springframework.format.annotation.DateTimeFormat;
    #end
#end
import java.io.Serializable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#if(${entityLombokModel})
import lombok.Data;
import java.io.Serializable;
#end

/**
 * <p>
 *  $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
@Accessors(chain = true)
#end
#if(${table.convert})
#end
@ApiModel(value = "${entity}", description = "${entity}")
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end implements Serializable{
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable {
#end

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
#elseif(${field.convert})
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
#if(${field.convert})
#else
#end
#elseif(${field.convert})
#end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
#end
    @ApiModelProperty(name = "${field.propertyName}",value = "${field.comment}")
    #if(${field.propertyType.equals("Date")})
    @DateTimeFormat(pattern="yyyy-MM-dd HH:mm:ss")
    #end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

    ## get方法
    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

    ## set方法
#if(${entityBuilderModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
        return this;
#end
    }
#end
#end

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";
#end
#end

#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
#foreach($field in ${table.fields})
#if($!{velocityCount}==1)
        "${field.propertyName}=" + ${field.propertyName} +
#else
        ", ${field.propertyName}=" + ${field.propertyName} +
#end
#end
        "}";
    }
#end
    @Override
    public String getBusId() {
        return id;
    }

    @Override
    public boolean isSupportSummary() {
        return true;
    }
}
